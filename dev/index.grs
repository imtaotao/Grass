<template>
  <div>
    <div @click.self.stop.prevent="this.callback.bind(this)">
      点击
    </div>
    <span v-for="val of arr">{{ val }}</span>

    <Child test1="api" :test2="api" :show="true" :api="api" ref="abc">
      <div slot="tao">{{api}}</div>
      tt
      <bb slot='fangfang' a='1'></bb>
    </Child>
    ---
    <Child :show="show" ref="ac" v-if='show'/>
  </div>
</template>

<script>
  import Child from './child'
  import style from './style.css'
  import response from './response.grs'

  @Grass.CSSModules(style)
  class Root extends Grass.Component {
    // #temp
    constructor () {
      super()
      this.createResponseState({
        api: 'index',
        arr: [1, 2],
        show: true,
      })

      window.ss = this.state
    }

    createBefore() {
      this.setState({ a: 1}) 
    }

    created (dom) {
      console.log(this.$children);
      Child.listener('tt', this.testListener)
    }

    willUpdate (dom) {
      console.log(dom);
    }

    callback (api) {
      this.state.show = !this.state.show
      this.state.arr = [1, 2, 3, 4, 5]
      this.state.api = 'taotao'
      
      Child.remove(this.testListener)
    }

    testListener (data) {
      console.log(data)
    }

    beforeEnter (dom) {
      // console.log(dom);
      // console.log('beforeEnter');
    }

    afterEnter (dom) {
      // console.log('afterEnter');
    }

    beforeLeave (dom) {
      // console.log('beforeLeave');
    }

    afterLeave (dom) {
      // console.log('afterLeave');
    }

    component () {
      return {
        response,
        Child,
        bb: function bb (props, r, parent) {
          const d = () => '<span>陈涛</span>'
          r('ddd', d)()
          console.log(r);
          return `<div>{{a}}<ddd/></div>`
        }
      }
    }
  }

  window.rr = Root.$mount(document.getElementById('root'))
</script>